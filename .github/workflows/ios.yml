name: iOS CI (Build & TestFlight)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-upload:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Select Xcode
        run: sudo xcode-select -s "/Applications/Xcode.app"

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
      - run: gem install fastlane

      - name: Install signing cert
        env:
          P12_BASE64: ${{ secrets.IOS_CERT_P12_BASE64 }}
          P12_PASSWORD: ${{ secrets.IOS_CERT_P12_PASSWORD }}
        run: |
          if [ -z "$P12_BASE64" ] || [ -z "$P12_PASSWORD" ]; then
            echo "Missing signing certificate or password. Did you set IOS_CERT_P12_BASE64 and IOS_CERT_P12_PASSWORD secrets?" >&2
            exit 1
          fi
          echo -n "$P12_BASE64" | base64 --decode > signing.p12
          security create-keychain -p "" build.keychain
          security import signing.p12 -k ~/Library/Keychains/build.keychain -P "$P12_PASSWORD" -T /usr/bin/codesign
          security list-keychains -s ~/Library/Keychains/build.keychain
          security default-keychain -s ~/Library/Keychains/build.keychain
          security unlock-keychain -p "" ~/Library/Keychains/build.keychain
          security set-key-partition-list -S apple-tool:,apple: -s -k "" ~/Library/Keychains/build.keychain

      - name: Install provisioning profile
        env:
          MOBILEPROVISION_BASE64: ${{ secrets.IOS_MOBILEPROVISION_BASE64 }}
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          echo "$MOBILEPROVISION_BASE64" | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/build_pp.mobileprovision

      - name: Build archive
        run: |
          xcodebuild -scheme "GPU-Terminal"                      -configuration Release                      -sdk iphoneos                      -archivePath $PWD/build/App.xcarchive                      clean archive                      CODE_SIGNING_ALLOWED=YES

      - name: Export IPA
        run: |
          cat > exportOptions.plist <<'PLIST'
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
            <dict>
              <key>method</key><string>app-store</string>
              <key>stripSwiftSymbols</key><true/>
              <key>teamID</key><string>YOUR_TEAM_ID</string>
            </dict>
          </plist>
          PLIST
          xcodebuild -exportArchive             -archivePath $PWD/build/App.xcarchive             -exportPath $PWD/build             -exportOptionsPlist exportOptions.plist

      - name: Upload to TestFlight
        env:
          ASC_KEY_ID: ${{ secrets.ASC_KEY_ID }}
          ASC_ISSUER_ID: ${{ secrets.ASC_ISSUER_ID }}
          ASC_KEY_P8_BASE64: ${{ secrets.ASC_KEY_P8_BASE64 }}
        run: |
          echo "$ASC_KEY_P8_BASE64" | base64 --decode > AuthKey.p8
          fastlane pilot upload             --api_key "{"key_id":"$ASC_KEY_ID","issuer_id":"$ASC_ISSUER_ID","key_filepath":"AuthKey.p8"}"             --ipa ./build/*.ipa             --skip_waiting_for_build_processing true
